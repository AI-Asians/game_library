**UPDATED PROMPT:**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Water boils at 100 degrees Celsius at sea level.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Push-Block: Use arrow keys to push a block onto a True or False pressure plate.**  
 Description of mechanic: 

* Player controls a character that can push a block across the game area
* Two pressure plates are visible - one labeled "True" and one labeled "False"
* Player must determine if the statement is true or false, then push the block onto the corresponding plate
* Arrow keys (or swipe on mobile) control the character's movement
* The block can only be pushed, not pulled
* Success occurs when the block is pushed onto the correct pressure plate
* Failure occurs when the block is pushed onto the incorrect pressure plate
* The block should have some weight/resistance to make the pushing feel satisfying

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

* Character should be a simple pixelated avatar with basic walking animations
* The block should look heavy and solid with pixel shading
* Pressure plates should be visibly different colors for True and False
* Include subtle pixel-art floor tiles or grid patterns
* When pushing the block, show a slight "exertion" animation from the character
* Use a contrasting color scheme between the floor, plates, and movable elements

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

* Block movement should feel weighty but not frustratingly slow
* Include a subtle indication of which direction the player is pushing
* The game area should be compact enough to reach either plate within the time limit
* Provide immediate visual feedback when the block reaches a pressure plate
* Include a small hint about using arrow keys at the start of the game
* Ensure the character cannot get stuck in corners or edges of the game area

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.