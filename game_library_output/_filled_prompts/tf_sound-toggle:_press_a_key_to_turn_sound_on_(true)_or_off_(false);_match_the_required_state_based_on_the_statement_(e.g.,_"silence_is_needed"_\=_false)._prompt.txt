# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Sound-Toggle: Press a key to turn sound On (True) or Off (False); match the required state based on the statement (e.g., "Silence is needed" = False).**  
 Description of mechanic: 

* Player toggles sound on/off using dedicated buttons (T for True/On, F for False/Off)
* The game displays a statement that needs to be evaluated as true or false
* The player must match the sound state to their answer (On = True, Off = False)
* Visual indicators should clearly show the current sound state (on/off)
* Success is determined by pressing the correct button that matches the statement's truth value

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Sound toggle buttons should have distinct "ON" and "OFF" states with pixelated icons
Include pixel art speakers that visibly change when toggled (vibrating when on, static when off)
Use contrasting colors for the TRUE/FALSE states to make them clearly distinguishable
Add a simple pixelated sound wave animation when sound is ON

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Include a timer or visual countdown to create urgency
Provide immediate audio-visual feedback when buttons are pressed
Make sure the sound toggle state is very obvious to players (large icons or indicators)
Ensure there's a clear "success" or "failure" animation when the player makes their choice

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.