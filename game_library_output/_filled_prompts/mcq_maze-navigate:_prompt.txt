# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Maze-Navigate:**  
 Description of mechanic: 

* Player controls a character that must navigate through a maze
* Multiple answer options are placed at different locations in the maze
* Player must reach the correct answer by navigating through the maze
* Incorrect answers may be positioned in easier-to-reach locations as distractors
* Maze should have clear paths and obstacles that prevent direct routes
* Character movement should be controlled via arrow keys or on-screen buttons
* The question should be clearly visible at the top of the screen at all times

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The maze should have pixel-art walls that resemble classic arcade mazes
Character should be a simple pixelated avatar with minimal animation frames
Answer options should be displayed in retro-style "treasure chests" or "signposts"
Use contrasting colors for walls vs. pathways to ensure visibility
Include simple pixel-art decorative elements in dead-ends or corners of the maze

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The maze should be small enough to be solved quickly
Character movement should be responsive and not too slow
Provide visual feedback when the player approaches an answer option
If using on-screen controls, make them large enough to be easily clickable
Include a subtle hint system (like a faint path) to guide players toward answers

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.