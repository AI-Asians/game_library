# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Cannon-Aim**  
 Description of mechanic: 

* Player controls a cannon that continuously rotates or moves
* Player must time their shot to hit the correct answer target
* Multiple answer targets should be positioned in different locations
* The cannon should rotate or move automatically (pendulum style or circular motion)
* Player presses a key/clicks to fire a projectile in the direction the cannon is currently aiming
* Success is determined by hitting the correct answer target
* Incorrect answers should have visible consequences (miss animation, etc.)

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The cannon should have a distinct pixelated design with visible mechanical parts.

The projectile should leave a trail or have a simple animation when fired.

Answer targets should look like arcade-style targets (bullseyes, barrels, or blocks).

Use contrasting colors for the cannon, projectile, and targets to ensure visibility.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The cannon rotation/movement speed should be challenging but fair.

Projectile speed should be fast enough to be satisfying but slow enough to see the trajectory.

Include a simple aiming guide or indicator to help players visualize the shot trajectory.

Ensure targets are sized appropriately to make the game challenging but not frustrating.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.