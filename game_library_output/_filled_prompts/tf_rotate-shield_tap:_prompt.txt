# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Rotate-Shield Tap:**  
 Description of mechanic: 

* A rotating shield with TRUE and FALSE sections spins around a central point
* Player must tap/click at the right moment to position the correct answer (TRUE or FALSE) to block an incoming attack
* The shield should continuously rotate at a moderate speed
* Attacks come from one direction (like arrows or projectiles) and the player must rotate the correct side of the shield to face that direction
* Success depends on timing the tap/click to position the correct answer to block the incoming attack
* If the wrong answer faces the attack, or the timing is off, the player loses

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The shield should have a distinct pixelated appearance with clear TRUE/FALSE sections
The incoming projectile should be visually distinct and match the 8-bit aesthetic
Use contrasting colors for TRUE and FALSE sections of the shield
Include a simple pixel-style background that doesn't distract from gameplay
Add simple particle effects when the shield successfully blocks or fails to block

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The shield rotation speed should be challenging but fair
The projectile should move at a consistent, predictable speed
Include visual feedback when a player clicks to indicate their attempt
Provide clear visual indication if the answer was correct or incorrect
The shield should have a satisfying "feel" when rotating and stopping

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.