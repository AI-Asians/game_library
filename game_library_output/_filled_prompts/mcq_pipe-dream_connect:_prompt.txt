# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Pipe-Dream Connect:**  
 Description of mechanic: 

- Player must connect a starting point to an ending point by placing pipe segments
- Multiple pipe types are available (straight, curved, T-junctions)
- Player selects and places pipes on a grid to form a continuous path
- Once the player creates a path, water/energy flows through to check if the solution works
- The correct answer is reached when the flow successfully navigates through pipes to the proper destination
- Incorrect pipe arrangements result in leaks or blockages

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Pipes should have a distinctive retro look with bold, chunky pixels
Use different colors to distinguish pipe types
The flowing liquid/energy should pulse in a simple animation
Grid squares should have visible borders in a contrasting color
Use bright, primary colors for important interactive elements

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Keep the pipe grid small (4x4 or 5x5 maximum) for quick gameplay
Limit pipe types to 3-4 varieties for simplicity 
Provide clear visual feedback when pipes connect correctly or incorrectly
Flow animation should be quick but visible 
Allow immediate pipe replacement if player changes their mind

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.