# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Push-Pull Tap:**  
 Description of mechanic: 

* Players are presented with an object that can be pulled back (like a slingshot or spring)
* The player must hold and drag/pull the object to a certain tension level
* When released, the object propels toward either the "True" or "False" target based on how far it was pulled
* Visual feedback should clearly show the tension and trajectory
* The object should have momentum and physics properties when released
* The goal is to correctly hit the "True" target if the statement is true or the "False" target if it's false

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Use bright, contrasting colors for the slingshot or spring mechanism
The projectile should have a distinct pixel appearance with clear edges
Add a chunky, pixelated power meter to indicate pull strength
Targets should have obvious "TRUE" and "FALSE" labels in simple block letters
Include a pixelated trajectory path once the object is launched

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The tension mechanism should have appropriate resistance
Include a satisfying "snap" when the object is released
Add visual cues to show correct pull strength for different distances
The physics should feel intuitive but slightly exaggerated for fun
Make sure the dragging motion works well with both mouse and touch input

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.