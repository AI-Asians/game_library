# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Submarine-Ping**  
 Description of mechanic: 

* Player controls a submarine that sends out sonar pings
* Multiple answer options appear as underwater objects
* Player must navigate to the correct answer and send a ping to select it
* The submarine moves in the direction the player clicks/taps
* Sonar ping is activated with a specific button
* Submarine should move smoothly with appropriate underwater physics
* Incorrect answers should provide visual feedback when pinged
* The correct answer should have a special visual response when detected

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The submarine should be pixelated with visible bubbles when moving.

The water background should have subtle pixel-art waves and ocean elements.

Sonar pings should appear as expanding circular waves with a retro aesthetic.

Answer options should look like different underwater objects or sea creatures in pixel art style.

The submarine control interface should resemble an old submarine periscope view.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Sonar ping cooldown should be quick (0.5-1 second) to maintain fast gameplay.

Submarine movement should be responsive but not too fast to maintain control.

Include a small fuel/energy meter that depletes with each ping to add urgency.

Provide clear visual feedback when the ping detects an answer (correct or incorrect).

Make the ping mechanic intuitive with a clear button or key press.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.