Here's the updated prompt:

---

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Water boils at 100 degrees Celsius at sea level.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Color-Flip Tap**  
 Description of mechanic: 

- A card or element rapidly flips between two colors (one representing true, one representing false)
- Player must tap at the right moment to select their answer when the desired color is showing
- Colors should alternate at a challenging but fair speed
- Clear visual indicators for which color represents which answer (True/False)
- Success depends on timing the tap when the correct color for the answer is visible

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The flipping card should have a distinct pixelated animation effect when transitioning between colors.
Use contrasting colors that are easy to distinguish (e.g., blue for true, red for false).
Add pixelated labels or symbols on each color state to reinforce True/False.
Include a simple pixel-art timer or visual indicator showing how much time is left to answer.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The color-flipping speed should gradually increase to add challenge.
Provide immediate visual feedback when the player makes their choice.
Include a brief "ready, set, go" countdown before the color flipping begins.
The card should have a slight "wobble" animation to increase visual interest during flipping.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.