# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Lock-Combination**  
 Description of mechanic: 

* Player must turn multiple dials/wheels to select the correct combination
* Each dial contains different answer options that can be rotated independently
* Player turns the dials by clicking/tapping the up/down arrows next to each dial
* All dials must be set to the correct position/answer to unlock the combination
* Visual feedback should be given when the correct combination is achieved
* The lock should visibly "open" when the correct answer is selected

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The lock mechanism should have a metallic, pixelated appearance
Dials should have a tactile, mechanical look with visible "clicks" when rotated
Include pixelated up/down arrows that light up when clicked
The lock housing should appear as a chunky metal case with visible rivets/screws
When unlocked, the lock should visibly pop open with a satisfying animation

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Each dial rotation should produce a satisfying "click" sound
Include a distinct "unlock" sound when the correct combination is set
The lock mechanism should have subtle animations even when idle
Provide immediate visual/audio feedback with each dial movement
The correct combination must be clearly indicated when achieved

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.