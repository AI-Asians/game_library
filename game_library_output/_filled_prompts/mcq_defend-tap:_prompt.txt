# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Defend-Tap**  
 Description of mechanic: 

* Enemies (incorrect answers) and allies (correct answers) move across the screen
* Player must tap/click only on the correct answer to eliminate it
* Clicking incorrect answers results in a game over
* If correct answer reaches a certain point (like a finish line or base), player loses
* Success requires tapping the correct answer before it reaches the critical point
* Answers should visibly move across the screen with clear visual distinction between correct and incorrect options

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Enemies (incorrect answers) should have distinctive pixelated designs
The correct answer should look different but not obviously marked as correct
Include a pixelated "base" or finish line at the bottom of the screen
Use pixel-art explosions for when answers are tapped
Include a simple health bar or shield indicator for the base being defended

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Enemies and correct answers should move at varying speeds to add challenge
Include a clear visual indicator when base is being approached
Movement patterns should be straightforward but engaging
Provide clear visual feedback when the player taps/clicks on any answer
The game should have a sense of urgency as answers approach the defended base

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.