# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Tower-Defense Select:**  
 Description of mechanic: 

* Enemies carrying different answer options approach a central tower or base
* Player must select/click/tap on the enemy carrying the correct answer
* Incorrect enemies must be avoided or they will damage the tower/base
* The correct enemy should be visually different but not obviously so
* Success is determined by selecting the correct enemy before time runs out or before the tower takes too much damage
* No complex enemy AI required - just have them move in simple patterns toward the tower

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

* Enemies should have a distinct 8-bit monster or invader appearance
* The central tower should resemble a classic pixel fortress or castle
* Use vibrant contrasting colors for enemies carrying different answers
* Include simple "damage" animations when incorrect enemies reach the tower
* Add pixel-style explosion effects when enemies are clicked

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

* Enemies should move at varying speeds to add challenge
* The tower should show a simple health indicator that decreases with incorrect enemies
* Include a clearly visible timer counting down from 10 seconds
* Provide immediate feedback when an enemy is clicked (correct or incorrect)
* Ensure the game is balanced so that the correct answer enemy can be spotted and clicked within the time limit

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.