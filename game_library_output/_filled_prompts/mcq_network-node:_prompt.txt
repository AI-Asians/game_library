I'll replace the curly braces items with the values from INFO_DICT and replace the instructions in <<< >>> markers as requested.

**UPDATED PROMPT:**

---

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Network-Node**  
 Description of mechanic: 

There should be only one correct answer if the question is MCQ or T/F.

- Nodes (answer options) are arranged in a network-like layout on the screen
- Player must navigate through or connect nodes to make their selection
- Nodes should be visually represented as distinct circular or hexagonal elements
- Connections between nodes (lines/paths) should be clearly visible
- Player selects answers by clicking on nodes or creating connections between them
- Visual feedback should show when nodes are selected or connections are made
- The correct path or node should be highlighted when the game concludes

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Nodes should have a pixel art design with clear borders and distinct colors
Network connections should appear as pixelated lines or paths
Include subtle pulsing or blinking animations for interactive nodes
Use a retro-style grid or circuit board-like background
Implement chunky selection indicators when hovering over nodes

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Nodes should respond immediately to player interaction
Include subtle visual feedback when hovering over nodes
Ensure all nodes are accessible and clearly distinguishable
The network layout should be intuitive and not overly complex
Provide clear visual feedback for correct and incorrect selections

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.