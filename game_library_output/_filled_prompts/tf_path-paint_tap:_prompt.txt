# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

---

**GAME MECHANIC: Path-Paint Tap**  
Description of mechanic: 

* Player's character automatically moves along a path/maze
* Player must tap/click to "paint" or mark specific sections of the path as True or False
* The character follows a predetermined route through the environment
* Player must decide which sections to mark before the character reaches them
* Success is determined by correctly marking the right sections (True or False answers)
* Visual feedback should show painted/marked sections in different colors for True/False

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The path should have a distinct pixelated appearance with clearly defined segments.
The character should be a simple, recognizable 8-bit style sprite.
True/False sections should be visibly different with contrasting colors (e.g., green for True, red for False).
Include pixel-art "paint splatter" effects when marking sections of the path.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The character should move at a moderate, steady pace to give players enough time to mark sections.
Include brief visual instructions at the start showing which button/tap marks True and which marks False.
Path sections should be clearly defined so players know exactly what they're marking.
Provide immediate visual and audio feedback when players mark a section.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.