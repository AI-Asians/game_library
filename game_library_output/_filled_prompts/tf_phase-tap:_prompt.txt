**UPDATED PROMPT:**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Water boils at 100 degrees Celsius at sea level.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Phase-Tap**  
 Description of mechanic: 

- Objects or answer options appear and disappear at different phases or intervals
- Player must tap/click when the correct answer is visible or in the proper phase
- Options should fade in and out, appearing and disappearing in a rhythmic pattern
- Visual indicators should clearly show which phase the game is currently in
- Timing is critical - player must click at the right moment when the correct answer is present

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The phase transitions should have a distinct pixelated fade effect resembling old arcade games.
Include a pixel-art indicator showing the current phase cycle (like a small pulsing icon or color change).
Use contrasting colors for different phases to make them clearly distinguishable.
Add a subtle background pattern that shifts with each phase change.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Each phase should last only 1-2 seconds before transitioning.
Include a subtle visual rhythm indicator to help players anticipate phase changes.
The correct answer should appear in a specific phase that repeats in a pattern.
Provide immediate visual feedback when a player taps during any phase.
Include a brief tutorial phase showing the pattern before the real game begins.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.