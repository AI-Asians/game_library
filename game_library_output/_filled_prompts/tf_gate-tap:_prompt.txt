# UPDATED PROMPT

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Gate-Tap:**  
 Description of mechanic: 

* Player taps/clicks on a gate or barrier to open it
* Gates display "True" and "False" options prominently on them
* The player must select the gate with the correct answer to the question
* Gates should have a clear visual design that indicates they can be interacted with
* Gates should visually open/swing when clicked to reveal if the answer was correct/incorrect
* Sound effects should play when gates open and for correct/incorrect selections
* Include simple visual feedback that distinguishes correct from incorrect choices

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Gates should have a medieval/castle-like appearance with distinct pixel art textures
The gates should cast small shadows to create depth in the scene
Use contrasting colors for True/False gates to make them easily distinguishable
Add simple pixel art decorative elements around the gates (torches, stones, etc.)
Include a pixelated background that fits the gate theme (castle courtyard, dungeon, etc.)

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Gates should open with a satisfying animation when clicked
Include a slight "wobble" or movement to the gates to entice interaction
Gates should have a subtle hover effect to indicate they're clickable
The question should be prominently displayed above the gates
After selection, clearly indicate the correct answer before showing the restart option

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.