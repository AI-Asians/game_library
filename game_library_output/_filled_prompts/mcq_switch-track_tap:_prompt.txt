# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
Which planet is known as the Red Planet?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

---

**GAME MECHANIC: Switch-Track Tap**  
Description of mechanic: 

* Multiple train tracks appear with different answer options on trains
* Player must switch/redirect the main track to connect with the track containing the correct answer
* Trains move along the tracks at a steady pace
* Player must tap/click track switches at the right moment to redirect the path
* Success depends on correctly routing the train to the track with the right answer
* Visual feedback when switches are activated and when the train reaches its destination

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The train tracks should have a distinct pixel art style with visible wooden ties.
Switches should have a clear lever or signal that visibly changes position when activated.
Trains should be simple but recognizable pixel art locomotives with answer text clearly visible.
Use contrasting colors for different tracks to help players distinguish routes.
Add small animated pixel smoke from the train chimney for extra retro charm.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Ensure the train starts far enough away to give players time to make a decision.
Include a visual countdown or distance indicator so players know when they need to act.
Train speed should be challenging but fair - not too fast or too slow.
Switch controls should be responsive with no delay between player action and track movement.
Include visual feedback when switches are activated (like a satisfying click or movement animation).

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.