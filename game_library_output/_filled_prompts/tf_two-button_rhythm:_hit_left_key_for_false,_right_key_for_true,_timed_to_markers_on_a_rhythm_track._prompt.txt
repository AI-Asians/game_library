# UPDATED PROMPT

---

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Two-Button Rhythm: Hit Left key for False, Right key for True, timed to markers on a rhythm track.**  
 Description of mechanic: 

* Two buttons (left/right) correspond to True/False answers
* Markers move along a rhythm track toward a target zone
* Player must press the correct answer button when the marker reaches the target zone
* Visual timing indicators show when to press (like in Guitar Hero or Dance Dance Revolution)
* Markers should move at a consistent, moderately challenging speed
* Clear visual feedback when the player hits at the right or wrong time
* The target zone should be clearly marked and distinct from the rest of the track

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The rhythm track should have a distinct pixelated look with bright contrasting colors
Markers should resemble classic game elements like blocks or arrows
Include flashing effects when hitting the target zone correctly
The True/False buttons should be styled like old arcade game buttons
Use chunky pixel-style arrows to indicate left/right controls

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The rhythm of the markers should feel satisfying and slightly challenging
Include a visual countdown or preparation phase before markers reach the target
Provide instant visual feedback on hit accuracy (perfect, good, miss)
Include brief instructions that don't obstruct gameplay ("Left = False, Right = True")
The correct answer must be clearly indicated somewhere on screen

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.