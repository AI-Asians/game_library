# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Which planet is known as the Red Planet?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Whack-A-Mole Answer:**  
 Description of mechanic: 

* Multiple "mole holes" appear on screen with different answers popping up from each
* Answers pop up and down randomly from their holes at varying intervals
* Player must click/tap the correct answer when it appears
* Incorrect answers should move back down when clicked
* The correct answer should stay visible when clicked and trigger the win state
* Include at least 4 answer holes (1 correct, 3 incorrect)
* Make sure the mole movement feels snappy and playful
* Each mole should have a distinct pixel art appearance

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The mole holes should look like classic dirt mounds with a clear hole where moles pop out
Each answer option should appear on a small sign held by the mole
The hammer/cursor should change to a pixelated mallet when hovering over the game area
Add a simple grass or dirt background texture using pixel patterns
Include a simple animation effect when whacking a mole (stars or impact)

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Moles should pop up at varying speeds and frequencies to create challenge
The game should get slightly faster as time progresses
Include a simple "whack" animation when clicking on any mole
Make sure the moles stay up long enough to be readable but not so long that the game is too easy
The mole movement pattern should be unpredictable to maintain player engagement

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.