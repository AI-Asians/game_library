# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Water boils at 100 degrees Celsius at sea level.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Binary-Jump Platformer: Character runs automatically; press Jump key (Spacebar) only if the statement is True to clear gaps or collect items. If False, do nothing.**  
 Description of mechanic: 

* Character automatically runs from left to right across the screen
* Player must press the jump button (Spacebar) ONLY if the displayed statement is TRUE
* If statement is FALSE, player should NOT jump and continue running
* Gaps/obstacles appear that must be jumped over if statement is true
* If statement is false, jumping will cause the player to hit obstacles or miss collectibles
* Success is determined by correct action based on statement truth value
* Immediate feedback when player makes the right or wrong choice

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

* The character should be a simple 8-bit style sprite with basic running and jumping animations
* Platforms and obstacles should have clear pixel-art edges and textures
* The background should have parallax scrolling layers for depth
* Include simple particle effects for jumps and collisions
* Use high-contrast colors to clearly distinguish platforms, gaps, and hazards

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

* The character should move at a consistent, moderate pace
* Include a clear instruction at the beginning: "Press SPACE to jump if TRUE, do nothing if FALSE"
* Place the true/false statement prominently at the top of the screen
* Include visual cues for when to jump or not jump (gap versus obstacle)
* The course length should be short enough to complete in under 10 seconds
* Provide immediate visual feedback for correct/incorrect choices

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.