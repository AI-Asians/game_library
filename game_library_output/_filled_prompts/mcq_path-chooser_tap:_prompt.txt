## UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Which planet is known as the Red Planet?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Path-Chooser Tap:**  
 Description of mechanic: 

* Player navigates a character along a path with multiple choice branches
* Each branch represents a possible answer to the question
* Player must tap/click to select which path to take when reaching a junction
* Visual feedback should clearly indicate the different path options
* Immediate feedback shows if the chosen path (answer) was correct
* Character automatically moves along the path but stops at choice points
* Success is determined by selecting the correct path that corresponds to the right answer

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The paths should have a distinctive 8-bit appearance with pixelated edges
Character should be a simple, recognizable pixel sprite 
Junction points should have clear visual indicators showing possible answers
Use contrasting colors for different path options to make choices clear
The environment around the paths should maintain the retro game aesthetic

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Character movement should be smooth but clearly pixel-based
The path branches should be easily distinguishable with answer options clearly visible
Provide immediate visual feedback when a path is selected (correct/incorrect)
Keep the path layout simple enough to fit entirely on screen
Include subtle animations when the character reaches junction points to draw attention

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.