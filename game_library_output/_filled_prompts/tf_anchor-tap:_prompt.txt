# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type TF.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 The Great Wall of China is visible from space.

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Anchor-Tap:**  
 Description of mechanic: 

* Player taps/clicks on a stationary anchor point on the screen
* The anchor point serves as a fixed position where interactions occur
* Objects or elements may appear around or move toward this anchor point
* Decision-making happens at this specific location rather than tracking moving targets
* Player must wait for the right moment or condition before tapping the anchor
* Visual feedback should clearly indicate when the anchor is active or can be interacted with
* The anchor point should be visually distinct and easy to identify

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The anchor point should have a distinctive pixelated glow or pulse effect.
The anchor should stand out against the background with high contrast colors.
Use simple geometric shapes with pixelated edges for the anchor design.
Include subtle animation for the anchor to indicate it's interactive (pulsing or flashing).
True/False indicators should appear with retro-style yes/no symbols or pixelated checkmarks/crosses.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

The anchor should respond with immediate visual feedback when tapped.
Include a brief window of opportunity where the player must decide to tap or not.
Ensure the anchor point is large enough to be easily tapped without frustration.
Add a small delay between showing the question and activating the anchor to give players time to read.
Include clear success/failure animations centered around the anchor point.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.