Based on the provided information, here is the updated prompt:

---

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Art-Gallery**  
 Description of mechanic: 

* Player navigates through a virtual art gallery with different paintings/artwork
* Each artwork represents a possible answer to the question
* Player must select the artwork that corresponds to the correct answer
* Artworks should be displayed in frames on gallery walls
* Navigation can be through clicking arrows or directly clicking on artworks
* Success is based on selecting the correct artwork

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Artwork frames should have a distinct pixelated gold border design
Gallery walls should have a simple retro-style wallpaper pattern
Include pixelated floor tiles to enhance the gallery atmosphere
Add small spotlights above each artwork with minimal light effects
Use exaggerated pixel-art versions of the answer options as the gallery artworks

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Player should be able to move between artworks with clear visual indication of which artwork is currently selected
Include a small information plaque under each artwork with the answer text
When hovering over artwork, it should subtly highlight or enlarge to indicate interactivity
Gallery should have a clear entrance and exit to guide the player experience
Feedback should include gallery-appropriate sounds (footsteps when moving, a pleasing chime for correct selection)

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.