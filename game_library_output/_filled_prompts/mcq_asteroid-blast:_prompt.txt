# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 Which planet is known as the Red Planet?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Asteroid-Blast:**  
 Description of mechanic: 

* Asteroids with different answer options float across the screen
* Player controls a spaceship that can shoot lasers
* Player must blast the asteroid containing the correct answer
* Incorrect answers are eliminated when shot but don't end the game
* Correct answer ends the game when shot
* Asteroids should move at varying speeds across the screen
* Player's ship should be able to move along the bottom of the screen
* Shooting mechanism should be simple (one button to fire)

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

Asteroids should have a chunky, blocky appearance with simple geometric shapes.
Spaceship should be a simple pixel-art design with minimal details.
Laser beams should be bright, solid-colored lines or small patterns.
Background should resemble a starfield with minimal pixelated stars.
Use vibrant, contrasting colors for the answers to make them readable on the asteroid textures.

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Ship movement should be smooth and responsive.
Laser shots should travel upward at a consistent speed.
Asteroid movement patterns should be predictable enough to aim at.
Provide visual feedback when asteroids are hit (like a simple explosion effect).
Include a cooldown on shooting to prevent rapid-fire spamming.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.