# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
 The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
 What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
 Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

  ---

**GAME MECHANIC: Quick-Shoot**  
 Description of mechanic: 

* Multiple targets with different answers appear on screen
* Player must quickly aim and shoot the correct answer
* Targets may move around, bounce, or appear in random locations
* Player has a crosshair or gun that they control with mouse/touch
* Success depends on accurately shooting the correct target before time runs out
* Incorrect targets should have visually distinct feedback when shot

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The crosshair should have a distinct pixelated design that's easy to see
Targets should appear as pixelated bubbles or square blocks with text inside
Use bright, contrasting colors for the targets to make them stand out
Include pixel-style muzzle flash or bullet animation when shooting
Background should be simple and non-distracting (like a starfield or plain pattern)

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Crosshair movement should be smooth but have slight "weight" for better game feel
Targets should move at a moderate speed - not too fast to be impossible, but fast enough to be challenging
Include a subtle shooting cooldown (0.2-0.3 seconds) to prevent spam clicking
Add slight screen shake when firing for more satisfying feedback
Make sure hitboxes are slightly forgiving to make the game accessible

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
 The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.