# UPDATED PROMPT

**INSTRUCTIONS**

Write code for an educational mini game made with HTML5 canvas featuring ONE QUESTION that is of type MCQ.  
The game must start immediately in a playable state when loaded (no start screen).

No fancy game-over screen—only include a simple restart button without extra UI elements.

No complex UI beyond what's explicitly requested below.

Keep the code as simple and minimal as possible—minimize lines of code and do not introduce unnecessary complexity.

---

**QUESTION**

Use exactly this ONE question in the game:  
What is the capital of France?

Ensure the question does not overflow the screen.

---

**DEVICE OPTIMIZATION**

This game will be played on web, so please ensure it is optimized and tested accordingly.  
Fixed Canvas Size:

* For web: 800×600 pixels

* For mobile: 360×640 pixels

---

**GAME MECHANIC: Filter-Tap**  
Description of mechanic: 

* Answers/options fall or move across the screen like objects
* Player must tap/click only on the correct answer as it appears
* Incorrect answers should be avoided or filtered out
* Success depends on identifying and tapping the right answer among distractors
* The game should have clear visual feedback when objects are tapped

---

**IMPORTANT STYLING & AESTHETIC REQUIREMENTS**

Retro 8-bit Pixel Art style throughout (like classic NES/Game Boy).

All graphics should be pixelated, with a limited color palette (16–32 colors).

Animations should have a chunky, low-frame-rate "8-bit" feel.

UI elements must resemble an old-school arcade interface.

Do NOT use a pixel font. Use a simple, standard web-safe font (for example, Arial or sans-serif). Keep the font usage minimal, with no additional libraries required.

The falling objects should have distinct pixel-art shapes or icons that make them easily recognizable.

Use bold, contrasting colors to differentiate between correct answers and distractors.

Include simple particle effects when objects are tapped (pixelated explosions or sparkles).

---

**SOUND**

Let the model decide what retro-style sound effects to include, but use only a few simple beep-like effects (keep them minimal in code). No external sound libraries or large code snippets required.

---

**GAMEPLAY REQUIREMENTS**

Gameplay must be completable in UNDER 10 SECONDS.

No score-tracking of any kind. The game ends immediately as soon as the player hits the correct or incorrect answer.

Focus on ADDICTIVE, FUN timing with satisfying feedback.

No external dependencies—generate or simulate any needed sound effects in code with minimal overhead.

Simple enough for anyone to understand immediately with minimal instructions.

Objects should move at a moderate pace - not too fast to be frustrating, but fast enough to be engaging.

Include a visual indicator (like a chunky 8-bit arrow or highlight) to draw attention to the question at the top.

Ensure tappable areas are large enough for comfortable interaction.

---

**DELIVERABLE**

The code must be fully functional, efficient, and tested to work on web.  
The code must be kept as short as reasonably possible—avoid unnecessary lines.

Provide a single HTML file that is ready to run when downloaded and opened.